server {
    root /srv/api/public;



    location / {
        # try to serve file directly, fallback to index.php
        #try_files $uri @cache /index.php$is_args$args;
        try_files $uri @cache;
    }

    location @cache {
        resolver local=on;
        default_type text/html;

        lua_code_cache  on;
        content_by_lua_file /etc/nginx/conf.d/cache.lua;
    }

    location ~ ^/index\.php(/|$) {
        internal;

        set_by_lua $upstream_host 'return os.getenv("UPSTREAM") or "php:9000"';
        fastcgi_pass $upstream_host;
        resolver local=on;

        # Increase the buffer size to handle large cache invalidation headers
        fastcgi_buffer_size 32k;
        fastcgi_buffers 32 4k;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path

    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

    # URL for health checks
    location /nginx-health {
      access_log off;
      default_type text/plain;
      return 200 "healthy\n";
    }
}
