{% import 'partials/macros.php.twig' as _ %}
{% include 'partials/header.php.twig' %}

{{ _.use(enum) }}
use Exception;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

final class {{ target | short_name }} implements NormalizerInterface, DenormalizerInterface {

    /**
    * @param {{ enum | short_name }} {{ enum | var_name }}
    * @param string|null $format
    * @param array $context
    * @return mixed
    */
    public function normalize({{ enum | var_name }}, string $format = null, array $context = [])
    {
        return {{ enum | var_name }}->getValue();
    }

    public function supportsNormalization($data, string $format = null)
    {
        return $data instanceof {{ enum | short_name }};
    }

    public function denormalize($data, string $type, string $format = null, array $context = [])
    {
        return {{ enum | short_name }}::from($data);
    }

    public function supportsDenormalization($data, string $type, string $format = null)
    {
        return $type === {{ enum | short_name }}::class;
    }
}
