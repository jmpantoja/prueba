security:
    role_hierarchy:
        ROLE_ADMIN_ENTRIES: [ ROLE_ENTRIES_EDIT, ROLE_ENTRIES_CREATE, ROLE_ENTRIES_DELETE, ROLE_ENTRIES_LIST, ROLE_ENTRIES_EXPORT ]

        ROLE_ADMIN: [ ROLE_USER, ROLE_ADMIN_ENTRIES ]
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

    encoders:
        App\Domain\User\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Domain\User\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            stateless: true
            anonymous: true
            security: true
            provider: app_user_provider
            json_login:
                check_path: /token
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        refresh:
            pattern: ^/token/refresh
            stateless: true
            anonymous: true

        # activate different ways to authenticate
        # https://symfony.com/doc/current/security.html#firewalls-authentication

        # https://symfony.com/doc/current/security/impersonating_user.html
        # switch_user: true

        # Easy way to control access for large sections of your site
        # Note: Only the *first* access control that matches will be used
        #    access_control:
        #        - { path: ^/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY } # Allows accessing the Swagger UI
        #        - { path: ^/token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #        - { path: ^/profile, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
