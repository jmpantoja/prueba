version: '3.4'

services:
  php:
    image: ${PHP_IMAGE:?PHP_IMAGE is not set or empty}
    logging:
      options:
        max-size: "10m"
        max-file: "3"

    restart: always
    depends_on:
      - db
    environment:
      APP_DEBUG: ${APP_DEBUG}
      APP_ENV: ${APP_ENV}
      APP_SECRET: ${APP_SECRET:?APP_SECRET is not set or empty}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN:?CORS_ALLOW_ORIGIN is not set or empty}
      DATABASE_URL: ${DATABASE_URL:?DATABASE_URL is not set or empty}
      MERCURE_JWT_TOKEN: ${MERCURE_JWT_TOKEN:?MERCURE_JWT_TOKEN is not set or empty}
      MERCURE_SUBSCRIBE_URL: ${MERCURE_SUBSCRIBE_URL:?MERCURE_SUBSCRIBE_URL is not set or empty}
      TRUSTED_HOSTS: ${TRUSTED_HOSTS:?TRUSTED_HOSTS is not set or empty}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}

      #https://brunopaz.dev/blog/docker-phpstorm-and-xdebug-the-definitive-guide
      PHP_IDE_CONFIG: serverName=symfony-demo
      XDEBUG_CONFIG: remote_host=172.17.0.1 #ifconfig -- docker0        
    volumes:
      - ./api:/srv/api

  api:
    build:
      context: ./api
      target: api_platform_nginx    
    image: ${NGINX_IMAGE:?NGINX_IMAGE is not set or empty}
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    restart: always
    depends_on:
      - php
      - redis
    volumes:
      - ./api/public:/srv/api/public/
      - ./api/docker/nginx/conf.d:/etc/nginx/conf.d

  redis:
    image: redis
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./docker/redis:/data
    entrypoint: redis-server --appendonly yes
    
#  cache-proxy:
#    image: ${VARNISH_IMAGE:?VARNISH_IMAGE is not set or empty}
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "3"
#    restart: always
#    depends_on:
#      - api
#    environment:
#      - VIRTUAL_HOST=${API_HOST:?API_HOST is not set or empty}
#    tmpfs:
#      - /usr/local/var/varnish:exec

  db:
    image: mysql:8.0
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    #   command: --max_allowed_packet=32505856
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./docker/mysql:/var/lib/mysql

  mercure:
    # in production, we may want to use the managed version of Mercure
    # https://mercure.rocks/pricing
    image: dunglas/mercure
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    restart: always
    environment:
      - ALLOW_ANONYMOUS=${MERCURE_ALLOW_ANONYMOUS:?MERCURE_ALLOW_ANONYMOUS is not set or empty}
      - CORS_ALLOWED_ORIGINS=${MERCURE_CORS_ALLOWED_ORIGINS:?MERCURE_CORS_ALLOWED_ORIGINS is not set or empty}
      - JWT_KEY=${MERCURE_JWT_KEY:?MERCURE_JWT_KEY is not set or empty}
      - VIRTUAL_HOST=${MERCURE_HOST:?MERCURE_HOST is not set or empty}

  client:
    # in production, we may want to use a static website hosting service
    # https://facebook.github.io/create-react-app/docs/deployment
    image: ${CLIENT_IMAGE:?CLIENT_IMAGE is not set or empty}
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    restart: always
    volumes:
      - ./client:/usr/app:rw
    environment:
      - API_ENDPOINT=https://${API_HOST}
      - TOKEN_URL=https://${API_HOST}/token
      - REFRESH_TOKEN_URL=https://${API_HOST}/token/refresh
      - PROFILE_URL=https://${API_HOST}/profile

  admin:
    # in production, we may want to use a static website hosting service
    # https://facebook.github.io/create-react-app/docs/deployment
    image: ${ADMIN_IMAGE:?ADMIN_IMAGE is not set or empty}
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    restart: always
    volumes:
      - ./admin:/usr/app:rw
    environment:
      - API_ENDPOINT=https://${API_HOST}
      - TOKEN_URL=https://${API_HOST}/token
      - REFRESH_TOKEN_URL=https://${API_HOST}/token/refresh
      - PROFILE_URL=https://${API_HOST}/profile
  #      - VIRTUAL_HOST=${ADMIN_HOST:?ADMIN_HOST is not set or empty}


  proxy:
    image: steveltn/https-portal:1
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - api
      - admin
      - client
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./docker/ssl_certs:/var/lib/https-portal

